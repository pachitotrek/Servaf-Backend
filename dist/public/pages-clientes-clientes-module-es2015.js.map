{"version":3,"sources":["./src/app/pages/clientes/clientes.page.html","./src/app/pages/clientes/clientes-routing.module.ts","./src/app/pages/clientes/clientes.module.ts","./src/app/pages/clientes/clientes.page.scss","./src/app/pages/clientes/clientes.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,2/BAA2/B,aAAa,+BAA+B,qBAAqB,+BAA+B,aAAa,+BAA+B,eAAe,+BAA+B,YAAY,+BAA+B,aAAa,sDAAsD,2hH;;;;;;;;;;;;;;;;;;;ACA1vC;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAMF,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACmB;AAErB;AAEyB;AAEvB;AAC2B;AAa1E,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;AAArB,kBAAkB;IAX9B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,uFAAiB;YACjB,kEAAmB;YACnB,0DAAW;YACX,kFAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,2DAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;ACtB/B,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AACV;AACK;AAO/D,IAAa,YAAY,GAAzB,MAAa,YAAY;IAOvB,YAAoB,GAAc,EAAS,GAAc;QAArC,QAAG,GAAH,GAAG,CAAW;QAAS,QAAG,GAAH,GAAG,CAAW;QAJzD,SAAI,GAAS,KAAK,CAAC;QACnB,WAAM,GAAS,IAAI,CAAC;QACpB,aAAQ,GAAK,EAAE,CAAC;QAGd,IAAI,CAAC,IAAI,GAAE,IAAI,wDAAS,CAAC;YACvB,MAAM,EAAC,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAChD,MAAM,EAAC,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAChD,SAAS,EAAC,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACnD,cAAc,EAAC,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACxD,KAAK,EAAC,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC/C,QAAQ,EAAC,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAClD,MAAM,EAAC,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAChD,GAAG,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC;YACzB,MAAM,EAAC,IAAI,0DAAW,CAAC,IAAI,CAAC;SAC7B,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,GAAE,IAAI,wDAAS,CAAC;YACtB,IAAI,EAAC,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC9C,KAAK,EAAC,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC/C,GAAG,EAAC,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;SAChD,CAAC,CAAC;IACJ,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,KAAK;QACH,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,CAAK,EAAC,EAAE;YACrC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;gBAC5D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAG,IAAI,CAAC,EAAE,EAAC;oBACT,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,CAAC,CAAK,EAAC,EAAE;wBACtC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,EAAC,2BAA2B,CAAC,CAAC;wBAC1D,IAAI,CAAC,WAAW,EAAE,CAAC;oBACrB,CAAC,CAAC;iBACH;YACH,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAK,EAAC,EAAE;YAChB,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,CAAC,CAAK,EAAC,EAAE;gBACtC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,mBAAmB,EAAC,sCAAsC,CAAC,CAAC;YACnF,CAAC,CAAC;QAEJ,CAAC,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;YAC3C,IAAG,IAAI,CAAC,EAAE,EAAC;gBACT,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,QAAQ,CAAC;aAC7B;QACH,CAAC,CAAC;IACJ,CAAC;IAED,GAAG,CAAC,IAAI;QACN,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;IAClB,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,CAAK,EAAC,EAAE;YACrC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;gBAC3D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAG,IAAI,CAAC,EAAE,EAAC;oBACT,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,CAAC,CAAK,EAAC,EAAE;wBACtC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,EAAC,gCAAgC,CAAC,CAAC;wBAC/D,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;wBAChB,IAAI,CAAC,WAAW,EAAE,CAAC;oBACrB,CAAC,CAAC;iBACH;YACH,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAK,EAAC,EAAE;YAChB,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,CAAC,CAAK,EAAC,EAAE;gBACtC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,mBAAmB,EAAC,sCAAsC,CAAC,CAAC;YACnF,CAAC,CAAC;QAEJ,CAAC,CAAC;IACJ,CAAC;CAOF;;YAvFyB,uEAAU;YAAa,4EAAU;;AAP9C,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,sJAAmC;;KAEpC,CAAC;2EAQwB,uEAAU,EAAa,4EAAU;GAP9C,YAAY,CA8FxB;AA9FwB","file":"pages-clientes-clientes-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n <app-menu></app-menu>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"text-center mt-2\\\">\\n          <ion-item text-center color=\\\"primary\\\">\\n            <ion-label>Clientes Actuales</ion-label>\\n          </ion-item>\\n          <div class=\\\"text-center table-responsive\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"thead-dark\\\">\\n                <tr>\\n                  <th scope=\\\"col\\\">Nombre</th>\\n                  <th scope=\\\"col\\\">Tipo</th>\\n                  <th scope=\\\"col\\\">Numero</th>\\n                  <th scope=\\\"col\\\">Telefono</th>\\n                  <th scope=\\\"col\\\">Email</th>\\n                  <th scope=\\\"col\\\">Ciudad</th>\\n                  <th scope=\\\"col\\\">Gestionar</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let item of clientes\\\">\\n                  <th scope=\\\"row\\\">{{item.nombre}}</th>\\n                  <td>{{item.identificacion}}</td>\\n                  <td>{{item.numero}}</td>\\n                  <td>{{item.telefono}}</td>\\n                  <td>{{item.email}}</td>\\n                  <td>{{item.ciudad}}</td>\\n                  <td style=\\\"max-width: 130px;\\\" text-center>\\n                    <ion-button (click)=\\\"set(item)\\\" size=\\\"small\\\" color=\\\"success\\\">\\n                      <ion-icon slot=\\\"icon-only\\\" name=\\\"create\\\"></ion-icon>\\n                    </ion-button>               \\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>      \\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <div *ngIf=\\\"pannel\\\">\\n          <ion-item color=\\\"primary\\\" text-center class=\\\"mt-2\\\" *ngIf=\\\"edit\\\">\\n            <ion-icon name=\\\"refresh-circle\\\" slot=\\\"end\\\" (click)=\\\"refresh()\\\"></ion-icon>\\n            <ion-label>Editar Cliente</ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"primary\\\" text-center class=\\\"mt-2\\\" *ngIf=\\\"!edit\\\">\\n            <ion-icon name=\\\"refresh-circle\\\" slot=\\\"end\\\" (click)=\\\"refresh()\\\"></ion-icon>\\n            <ion-label>Crear Cliente</ion-label>\\n          </ion-item>      \\n        </div>\\n        <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"crear()\\\" *ngIf=\\\"pannel\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Nombre</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"nombre\\\" aria-describedby=\\\"\\\">\\n            <small class=\\\"form-text text-muted\\\">Nombre del Cliente</small>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Tipo de identificacion</label>\\n            <select class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\" formControlName=\\\"identificacion\\\">\\n              <option value=\\\"C.C\\\">C.C</option>\\n              <option value=\\\"NIT\\\">NIT</option>\\n              <option value=\\\"RUT\\\">RUT</option>\\n            </select>\\n           \\n            <small class=\\\"form-text text-muted\\\">Identificacion del Cliente</small>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Numero de Identificacion</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"numero\\\" aria-describedby=\\\"\\\">\\n            <small class=\\\"form-text text-muted\\\">Numero de Identificacion del cliente</small>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Direccion</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"direccion\\\" aria-describedby=\\\"\\\">\\n            <small class=\\\"form-text text-muted\\\">Direccion del Cliente</small>\\n          </div>\\n          <div class=\\\"form-group\\\" *ngIf=\\\"!edit\\\">\\n            <label>Telefono</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"telefono\\\" aria-describedby=\\\"\\\">\\n            <small class=\\\"form-text text-muted\\\">Telefono del cliente</small>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" aria-describedby=\\\"\\\">\\n            <small class=\\\"form-text text-muted\\\">Email del cliente</small>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleFormControlSelect1\\\">Ciudad</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ciudad\\\" aria-describedby=\\\"\\\">\\n         \\n          </div>     \\n         \\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!form.valid\\\"  *ngIf=\\\"!edit\\\">Crear Cliente</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!form.valid\\\" (click)=\\\"update()\\\"  *ngIf=\\\"edit\\\">Actualizar Cliente</button>\\n        </form>\\n   \\n\\n\\n\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ClientesPage } from './clientes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClientesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ClientesPageRoutingModule } from './clientes-routing.module';\n\nimport { ClientesPage } from './clientes.page';\nimport { ComponentesModule } from 'src/app/components/componentes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ComponentesModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ClientesPageRoutingModule\n  ],\n  declarations: [ClientesPage]\n})\nexport class ClientesPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NsaWVudGVzL2NsaWVudGVzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuxService } from 'src/app/services/auxiliar.service';\n\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './clientes.page.html',\n  styleUrls: ['./clientes.page.scss'],\n})\nexport class ClientesPage implements OnInit {\n  form: FormGroup;\n  form2: FormGroup;\n  edit:boolean=false;\n  pannel:boolean=true;\n  clientes:any=[];\n\n  constructor(private api:ApiService,private aux:AuxService) {\n    this.form= new FormGroup({\n      nombre:new FormControl(null,Validators.required),\n      numero:new FormControl(null,Validators.required),\n      direccion:new FormControl(null,Validators.required),\n      identificacion:new FormControl(null,Validators.required),\n      email:new FormControl(null,Validators.required),\n      telefono:new FormControl(null,Validators.required),\n      ciudad:new FormControl(null,Validators.required),\n      _id:new FormControl(null),\n      creado:new FormControl(null)  \n    });\n    this.form2= new FormGroup({\n        pass:new FormControl(null,Validators.required),\n        pass2:new FormControl(null,Validators.required),\n        _id:new FormControl(null,Validators.required) \n    });\n   }\n\n  ngOnInit() {\n    this.getClientes();\n  }\n\n  crear(){\n    this.aux.createLoading().then((x:any)=>{     \n      this.api.crearClientes(this.form.value).subscribe((resp:any)=>{\n        console.log(resp);\n        if(resp.ok){\n          this.aux.dismissLoading().then((b:any)=>{\n            this.aux.createAlert(\"Exito\",\"El cliente ha sido creado\");\n            this.getClientes();\n          })\n        }\n      });\n\n    }).catch((e:any)=>{\n      this.aux.dismissLoading().then((b:any)=>{\n        this.aux.createAlert(\"Error desconocido\",\"Error por favor contacte con soporte\");\n      })\n\n    })\n  }\n\n  getClientes(){\n    this.api.GetClientes().subscribe((resp:any)=>{\n      if(resp.ok){\n        this.clientes=resp.clientes;\n      }\n    })\n  }\n\n  set(item){\n    this.form.setValue(item);\n    this.edit=true;\n  }\n\n  refresh(){\n    this.form.reset();\n    this.edit=false;\n  }\n\n  update(){\n    this.aux.createLoading().then((x:any)=>{     \n      this.api.editClientes(this.form.value).subscribe((resp:any)=>{\n        console.log(resp);\n        if(resp.ok){\n          this.aux.dismissLoading().then((b:any)=>{\n            this.aux.createAlert(\"Exito\",\"El cliente ha sido actualizado\");\n            this.edit=false;\n            this.getClientes();\n          })\n        }\n      });\n\n    }).catch((e:any)=>{\n      this.aux.dismissLoading().then((b:any)=>{\n        this.aux.createAlert(\"Error desconocido\",\"Error por favor contacte con soporte\");\n      })\n\n    })\n  }\n\n\n\n\n\n\n}\n"],"sourceRoot":""}